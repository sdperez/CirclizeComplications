install.packages("circlize")
library(circlize)
set.seed(12345)
rand_color = function() {
return(rgb(runif(1), runif(1), runif(1)))
}
layout(matrix(1:9, 3, 3))
for(i in 1:9) {
factors = 1:8
par(mar = c(0.5, 0.5, 0.5, 0.5))
circos.par(cell.padding = c(0, 0, 0, 0))
circos.initialize(factors, xlim = c(0, 1))
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.initialize(factors, xlim = c(0, 1))
for(i in 1:9) {
factors = 1:8
par(mar = c(0.5, 0.5, 0.5, 0.5))
circos.par(cell.padding = c(0, 0, 0, 0))
circos.initialize(factors, xlim = c(0, 1))
circos.trackPlotRegion(ylim = c(0, 1), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
for(i in 1:20) {
se = sample(1:8, 2)
col = rand_color()
col = paste(col, "40", sep = "")
circos.link(se[1], runif(2), se[2], runif(2), col = col)
}
circos.clear()
}
plot(cars)
par(def.par)
par(mfrow=c(1,1))
plot(cars)
par(mar = c(1, 1, 1, 1))
plot(cars)
par(mar = c(2, 2, 1, 1))
plot(cars)
par(mar = c(3, 3, 2, 1))
plot(cars)
par(mar = c(5, 3, 2, 1))
plot(cars)
par(mar = c(5, 5, 2, 1))
plot(cars)
plot(cars)
plot(cars)
def.par <- par(no.readonly = TRUE) # save default, for resetting...
par(mar = c(5, 5, 2, 1))
plot(cars)
par(def.par)#reset to default
plot(cars)
library(circlize)
set.seed(12345)
rand_color = function() {
return(rgb(runif(1), runif(1), runif(1)))
}
factors = 1:8
circos.initialize(factors, xlim = c(0, 1))
circos.trackPlotRegion(ylim = c(0, 1), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
se = sample(1:8, 2)
col = rand_color()
col = paste(col, "40", sep = "")
col = rand_color()
col = paste(col, "40", sep = "")
circos.link(se[1], runif(2), se[2], runif(2), col = col)
circos.link(se[1], runif(2), se[2], runif(2), col = col)
col = rand_color()
col = paste(col, "40", sep = "")
circos.link(se[1], runif(2), se[2], runif(2), col = col)
col = rand_color()
col = paste(col, "40", sep = "")
circos.link(se[1], runif(2), se[2], runif(2), col = col)
se = sample(1:8, 2)
col = rand_color()
col = paste(col, "40", sep = "")
circos.link(se[1], runif(2), se[2], runif(2), col = col)
circos.trackPlotRegion(ylim = c(0, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.clear()
circos.initialize(factors, xlim = c(0, 1))
circos.trackPlotRegion(ylim = c(0, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.trackPlotRegion(ylim = c(1, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.initialize(factors, xlim = c(0, 2))
circos.trackPlotRegion(ylim = c(1, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.trackPlotRegion(ylim = c(0, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
letters[1:8]
sample(letters[1:8],2)
sample(letters[1:8],10,replace=T)
set.seed(12345)
n = 1000
a = data.frame(factor = sample(letters[1:8], n, replace = TRUE),
x = rnorm(n), y = runif(n))
View(a)
runif(2)
runif(2)
runif(2)
runif(2)
n=data.frame(factor=rep(1:3,each=100),x = rnorm(100), y = runif(100)))
n=data.frame(factor=rep(1:3,each=100),x = rnorm(100), y = runif(100))
View(n)
par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.7)
circos.par("default.track.height" = 0.1)
circos.initialize(factors = a$factor, x = a$x)
circos.trackPlotRegion(factors = a$factor, y = a$y,
panel.fun = function(x, y) {
circos.axis()
})
circos.initialize(factors = a$factor, x = a$x)
circos.trackPlotRegion(factors = a$factor, y = a$y, bg.col=1:8)
runif(1)
rgb(1,1,1)
rgb(2,2,2)
rgb(.5,.5,.5)
circos.trackPlotRegion(ylim = c(0, 1), track.height = 2,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.initialize(factors, xlim = c(0, 1))
circos.trackPlotRegion(ylim = c(0, 1), track.height = 2,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.trackPlotRegion(ylim = c(0, 1), track.height = 1,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.trackPlotRegion(ylim = c(0, 1), track.height = .1,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.initialize(factors, xlim = c(0, 2))
circos.trackPlotRegion(ylim = c(0, 2), track.height = 0.05,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
circos.initialize(factors, x = x,
sector.width =as.numeric(factors) )
circos.initialize(factors,
sector.width =as.numeric(factors) )
circos.initialize(factors, xlim = c(0, 1),
sector.width =as.numeric(factors) )
circos.trackPlotRegion(ylim = c(0, 1), track.height = .1,
bg.col = sapply(1:8, function(x) rand_color()), bg.border = NA)
library(foreign)
AllDat<-read.spss('C:/Users/sdperez.EMORYUNIVAD/Desktop/My Documents/NSQIP_PUF/acs_nsqip_puf12.sav',
to.data.frame=TRUE)
library(xlsx)
AllDat<-read.xlsx2('NSQIP2012.xls',1)
setwd('C:/Users/sdperez.EMORYUNIVAD/Documents/GitHub/CirclizeComplications')
library(xlsx)
AllDat<-read.xlsx2('NSQIP2012.xls',1)
